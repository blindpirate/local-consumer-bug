/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package vertx.local.consumer;

import io.vertx.core.Vertx;
import io.vertx.core.VertxOptions;
import io.vertx.core.eventbus.EventBusOptions;
import io.vertx.core.json.JsonObject;
import io.vertx.core.spi.cluster.ClusterManager;
import io.vertx.spi.cluster.zookeeper.ZookeeperClusterManager;

import java.util.Map;

public class App {
    public static void main(String[] args) {
        int port = Integer.parseInt(System.getenv("PORT"));
        boolean consumer = System.getenv("CONSUMER") != null;
        ClusterManager cm = new ZookeeperClusterManager(
                new JsonObject(Map.of("zookeeperHosts", "localhost:2181"))
        );

        VertxOptions options = new VertxOptions().setClusterManager(cm)
                .setEventBusOptions(
                        new EventBusOptions()
                                .setClusterPublicHost("localhost")
                                .setClusterPublicPort(port)
                                .setHost("0.0.0.0")
                                .setPort(port)
                );

        Vertx.clusteredVertx(options).onComplete(result -> {
            if (result.failed()) {
                result.cause().printStackTrace();
            } else {
                if (consumer) {
                    result.result().eventBus().consumer("distributed.event", message -> {
                        System.out.println("Get event on distributed consumer!" + message.body());
                    });
                    result.result().eventBus().localConsumer("distributed.event", message -> {
                        System.out.println("Get event on local consumer!" + message.body());
                    });
                } else {
                    result.result().eventBus().publish("distributed.event", "This is a message!");
                }
            }
        });
    }
}
